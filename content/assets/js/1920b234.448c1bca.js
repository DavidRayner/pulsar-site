"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[77548],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),f=o,m=c["".concat(i,".").concat(f)]||c[f]||d[f]||a;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:o,l[1]=s;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},31361:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(87462),o=(n(67294),n(3905));const a={id:"sql-deployment-configurations",title:"Pulsar SQl Deployment and Configuration",sidebar_label:"Deployment and Configuration",original_id:"sql-deployment-configurations"},l=void 0,s={unversionedId:"sql-deployment-configurations",id:"version-2.2.0/sql-deployment-configurations",title:"Pulsar SQl Deployment and Configuration",description:"Below is a list configurations for the Presto Pulsar connector and instruction on how to deploy a cluster.",source:"@site/versioned_docs/version-2.2.0/sql-deployment-configurations.md",sourceDirName:".",slug:"/sql-deployment-configurations",permalink:"/docs/2.2.0/sql-deployment-configurations",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.2.0/sql-deployment-configurations.md",tags:[],version:"2.2.0",frontMatter:{id:"sql-deployment-configurations",title:"Pulsar SQl Deployment and Configuration",sidebar_label:"Deployment and Configuration",original_id:"sql-deployment-configurations"},sidebar:"version-2.2.0/docsSidebar",previous:{title:"Getting Started",permalink:"/docs/2.2.0/sql-getting-started"},next:{title:"Amazon Web Services",permalink:"/docs/2.2.0/deploy-aws"}},i={},u=[{value:"Presto Pulsar Connector Configurations",id:"presto-pulsar-connector-configurations",level:2},{value:"Query Pulsar from Existing Presto Cluster",id:"query-pulsar-from-existing-presto-cluster",level:2},{value:"Deploying a new cluster",id:"deploying-a-new-cluster",level:2},{value:"Deploying to a 3 node cluster",id:"deploying-to-a-3-node-cluster",level:3}],p={toc:u},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Below is a list configurations for the Presto Pulsar connector and instruction on how to deploy a cluster."),(0,o.kt)("h2",{id:"presto-pulsar-connector-configurations"},"Presto Pulsar Connector Configurations"),(0,o.kt)("p",null,"There are several configurations for the Presto Pulsar Connector.  The properties file that contain these configurations can be found at ",(0,o.kt)("inlineCode",{parentName:"p"},"${project.root}/conf/presto/catalog/pulsar.properties"),".\nThe configurations for the connector and its default values are described below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"\n# name of the connector to be displayed in the catalog\nconnector.name=pulsar\n\n# the url of Pulsar broker service\npulsar.broker-service-url=http://localhost:8080\n\n# URI of Zookeeper cluster\npulsar.zookeeper-uri=localhost:2181\n\n# minimum number of entries to read at a single time\npulsar.entry-read-batch-size=100\n\n# default number of splits to use per query\npulsar.target-num-splits=4\n\n")),(0,o.kt)("h2",{id:"query-pulsar-from-existing-presto-cluster"},"Query Pulsar from Existing Presto Cluster"),(0,o.kt)("p",null,"If you already have an existing Presto cluster, you can copy Presto Pulsar connector plugin to your existing cluster.  You can download the archived plugin package via:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ wget https://archive.apache.org/dist/pulsar/pulsar-2.2.0/apache-pulsar-2.2.0-bin.tar.gz\n\n")),(0,o.kt)("h2",{id:"deploying-a-new-cluster"},"Deploying a new cluster"),(0,o.kt)("p",null,"Please note that the ",(0,o.kt)("a",{parentName:"p",href:"/docs/2.2.0/sql-getting-started"},"Getting Started")," guide shows you how to easily setup a standalone single node environment to experiment with."),(0,o.kt)("p",null,"Pulsar SQL is powered by ",(0,o.kt)("a",{parentName:"p",href:"https://prestosql.io"},"Presto")," thus many of the configurations for deployment is the same for the Pulsar SQL worker."),(0,o.kt)("p",null,"You can use the same CLI args as the Presto launcher:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ ./bin/pulsar sql-worker --help\nUsage: launcher [options] command\n\nCommands: run, start, stop, restart, kill, status\n\nOptions:\n  -h, --help            show this help message and exit\n  -v, --verbose         Run verbosely\n  --etc-dir=DIR         Defaults to INSTALL_PATH/etc\n  --launcher-config=FILE\n                        Defaults to INSTALL_PATH/bin/launcher.properties\n  --node-config=FILE    Defaults to ETC_DIR/node.properties\n  --jvm-config=FILE     Defaults to ETC_DIR/jvm.config\n  --config=FILE         Defaults to ETC_DIR/config.properties\n  --log-levels-file=FILE\n                        Defaults to ETC_DIR/log.properties\n  --data-dir=DIR        Defaults to INSTALL_PATH\n  --pid-file=FILE       Defaults to DATA_DIR/var/run/launcher.pid\n  --launcher-log-file=FILE\n                        Defaults to DATA_DIR/var/log/launcher.log (only in\n                        daemon mode)\n  --server-log-file=FILE\n                        Defaults to DATA_DIR/var/log/server.log (only in\n                        daemon mode)\n  -D NAME=VALUE         Set a Java system property\n\n")),(0,o.kt)("p",null,"There is a set of default configs for the cluster located in ",(0,o.kt)("inlineCode",{parentName:"p"},"${project.root}/conf/presto")," that will be used by default.  You can change them to customize your deployment"),(0,o.kt)("p",null,"You can also set the worker to read from a different configuration directory as well as set a different directory for writing its data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ ./bin/pulsar sql-worker run --etc-dir /tmp/incubator-pulsar/conf/presto --data-dir /tmp/presto-1\n\n")),(0,o.kt)("p",null,"You can also start the worker as daemon process:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ ./bin/pulsar sql-worker start\n\n")),(0,o.kt)("h3",{id:"deploying-to-a-3-node-cluster"},"Deploying to a 3 node cluster"),(0,o.kt)("p",null,"For example, if I wanted to deploy a Pulsar SQL/Presto cluster on 3 nodes, you can do the following:"),(0,o.kt)("p",null,"First, copy the Pulsar binary distribution to all three nodes."),(0,o.kt)("p",null,"The first node, will run the Presto coordinator.  The minimal configuration in ",(0,o.kt)("inlineCode",{parentName:"p"},"${project.root}/conf/presto/config.properties")," can be the following"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-properties"},"\ncoordinator=true\nnode-scheduler.include-coordinator=true\nhttp-server.http.port=8080\nquery.max-memory=50GB\nquery.max-memory-per-node=1GB\ndiscovery-server.enabled=true\ndiscovery.uri=<coordinator-url>\n\n")),(0,o.kt)("p",null,"Also, modify ",(0,o.kt)("inlineCode",{parentName:"p"},"pulsar.broker-service-url")," and  ",(0,o.kt)("inlineCode",{parentName:"p"},"pulsar.zookeeper-uri")," configs in ",(0,o.kt)("inlineCode",{parentName:"p"},"${project.root}/conf/presto/catalog/pulsar.properties")," on those nodes accordingly"),(0,o.kt)("p",null,"Afterwards, you can start the coordinator by just running"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"$ ./bin/pulsar sql-worker run")),(0,o.kt)("p",null,"For the other two nodes that will only serve as worker nodes, the configurations can be the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nproperties\ncoordinator=false\nhttp-server.http.port=8080\nquery.max-memory=50GB\nquery.max-memory-per-node=1GB\ndiscovery.uri=<coordinator-url>\n\n")),(0,o.kt)("p",null,"Also, modify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\npulsar.broker-service-url``` and  ```pulsar.zookeeper-uri``` configs in ```${project.root}/conf/presto/catalog/pulsar.properties``` accordingly\n\nYou can also start the worker by just running: ```$ ./bin/pulsar sql-worker run```\n\nYou can check the status of your cluster from the SQL CLI.  To start the SQL CLI:\n\n```bash\n\n$ ./bin/pulsar sql --server <coordinate_url>\n\n")),(0,o.kt)("p",null,"You can then run the following command to check the status of your nodes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\npresto> SELECT * FROM system.runtime.nodes;\n node_id |        http_uri         | node_version | coordinator | state\n---------+-------------------------+--------------+-------------+--------\n 1       | http://192.168.2.1:8081 | testversion  | true        | active\n 3       | http://192.168.2.2:8081 | testversion  | false       | active\n 2       | http://192.168.2.3:8081 | testversion  | false       | active\n\n")),(0,o.kt)("p",null,"For more information about deployment in Presto, please reference:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://prestosql.io/docs/current/installation/deployment.html"},"Deploying Presto")))}d.isMDXComponent=!0}}]);