"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[73311],{15680:(e,n,r)=>{r.d(n,{xA:()=>d,yg:()=>m});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),u=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},d=function(e){var n=u(e.components);return t.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},g=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=u(r),g=a,m=c["".concat(s,".").concat(g)]||c[g]||p[g]||i;return r?t.createElement(m,l(l({ref:n},d),{},{components:r})):t.createElement(m,l({ref:n},d))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=g;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}g.displayName="MDXCreateElement"},31385:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var t=r(58168),a=(r(96540),r(15680));const i={id:"pulsar-cs-1.0.0",title:"Pulsar DotPulsar",sidebar_label:"Pulsar DotPulsar"},l=void 0,o={unversionedId:"versioned/pulsar-cs-1.0.0",id:"versioned/pulsar-cs-1.0.0",title:"Pulsar DotPulsar",description:"Added",source:"@site/release-notes/versioned/pulsar-cs-1.0.0.md",sourceDirName:"versioned",slug:"/versioned/pulsar-cs-1.0.0",permalink:"/release-notes/versioned/pulsar-cs-1.0.0",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/release-notes/versioned/pulsar-cs-1.0.0.md",tags:[],version:"current",frontMatter:{id:"pulsar-cs-1.0.0",title:"Pulsar DotPulsar",sidebar_label:"Pulsar DotPulsar"}},s={},u=[{value:"Added",id:"added",level:2},{value:"Changed",id:"changed",level:2},{value:"Fixed",id:"fixed",level:2}],d={toc:u},c="wrapper";function p(e){let{components:n,...r}=e;return(0,a.yg)(c,(0,t.A)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"added"},"Added"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"A number of resilience, correctness, and performance improvements"),(0,a.yg)("li",{parentName:"ul"},"The optional listener name can be set via the PulsarClientBuilder"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("em",{parentName:"li"},"Experimental"),": Added an extension method for IConsumer that will 'Process' and auto-acknowledge messages while creating an Activity (useful for doing tracing)"),(0,a.yg)("li",{parentName:"ul"},"Schema support for the following types",(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},"Boolean"),(0,a.yg)("li",{parentName:"ul"},"Bytes (using byte[] and ReadOnlySequence\\<byte",">",")"),(0,a.yg)("li",{parentName:"ul"},"String (UTF-8, UTF-16, and US-ASCII)"),(0,a.yg)("li",{parentName:"ul"},"INT8, INT16, INT32, and INT64"),(0,a.yg)("li",{parentName:"ul"},"Float and Double"),(0,a.yg)("li",{parentName:"ul"},"Time (using TimeSpan)"),(0,a.yg)("li",{parentName:"ul"},"Timestamp and Date (using DateTime)")))),(0,a.yg)("h2",{id:"changed"},"Changed"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Breaking"),": Building a producer will now create an IProducer\\<T",">","\\\nThe non-generic IProducer interface is still there, but messages can only be sent (ISend) with IProducer\\<T",">"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Breaking"),": Building a reader or consumer will now create an IConsumer\\<T",">"," or IReader\\<T",">","\\\nThe non-generic IReader and IConsumer are still there, but messages can only be consumed/read (IReceive) with IConsumer\\<T",">"," and IReader\\<T",">"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Breaking"),": Receiving a message with now return an IMessage\\<T",">"," instead of the Message class (which is now internal)\\\nThe non-generic IMessage can be used if 'Value()' (decoding the 'Data' bytes) is not used (when just handling raw messages)"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Breaking"),": The message builder is now generic"),(0,a.yg)("li",{parentName:"ul"},"Setting an Action and Func StateChangedHandler on the ConsumerBuilder, ReaderBuilder, and ProducerBuilder are now extension methods"),(0,a.yg)("li",{parentName:"ul"},"Setting an Action and Func ExceptionHandler on the PulsarClientBuilder are now extension methods")),(0,a.yg)("h2",{id:"fixed"},"Fixed"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"When the broker sends a CommandClose","[Producer/Consumer]"," all in-flight (and following) requests to the broker are ignored.\\\nEven though we reconnect the consumer, reader, or producer the tasks for the in-flight requests will hang as long as the connection is kept alive by other producers/consumers/readers.\\\nThis situation is now handled and the requests will be sent again on the new connection.")))}p.isMDXComponent=!0}}]);