"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[32339],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,y=p["".concat(i,".").concat(m)]||p[m]||d[m]||s;return n?a.createElement(y,l(l({ref:t},c),{},{components:n})):a.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,l=new Array(s);l[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<s;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},89735:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var a=n(58168),r=(n(96540),n(15680));const s={id:"sql-getting-started",title:"Query data with Pulsar SQL",sidebar_label:"Query data",description:"Query data with Pulsar SQL."},l=void 0,o={unversionedId:"sql-getting-started",id:"sql-getting-started",title:"Query data with Pulsar SQL",description:"Query data with Pulsar SQL.",source:"@site/docs/sql-getting-started.md",sourceDirName:".",slug:"/sql-getting-started",permalink:"/docs/next/sql-getting-started",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/docs/sql-getting-started.md",tags:[],version:"current",frontMatter:{id:"sql-getting-started",title:"Query data with Pulsar SQL",sidebar_label:"Query data",description:"Query data with Pulsar SQL."},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/docs/next/sql-overview"},next:{title:"Configuration and deployment",permalink:"/docs/next/sql-deployment-configurations"}},i={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Query data in Pulsar",id:"query-data-in-pulsar",level:2},{value:"Step 1: Start a Pulsar cluster",id:"step-1-start-a-pulsar-cluster",level:3},{value:"Step 2: Start a Pulsar SQL worker",id:"step-2-start-a-pulsar-sql-worker",level:3},{value:"Step 3: Run SQL CLI",id:"step-3-run-sql-cli",level:3},{value:"Step 4: Test with SQL commands",id:"step-4-test-with-sql-commands",level:3},{value:"Step 5: Ingest some mock data",id:"step-5-ingest-some-mock-data",level:3}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Before querying data in Pulsar, you need to install Pulsar and built-in connectors."),(0,r.yg)("h2",{id:"requirements"},"Requirements"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Install ",(0,r.yg)("a",{parentName:"li",href:"/docs/next/getting-started-standalone"},"Pulsar"),"."),(0,r.yg)("li",{parentName:"ol"},"Install Pulsar ",(0,r.yg)("a",{parentName:"li",href:"/docs/next/io-quickstart#install-pulsar-and-built-in-connector"},"built-in connectors"),".")),(0,r.yg)("h2",{id:"query-data-in-pulsar"},"Query data in Pulsar"),(0,r.yg)("p",null,"To query data in Pulsar with Pulsar SQL, you need to complete the following steps:"),(0,r.yg)("h3",{id:"step-1-start-a-pulsar-cluster"},"Step 1: Start a Pulsar cluster"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"PULSAR_STANDALONE_USE_ZOOKEEPER=1 ./bin/pulsar standalone\n")),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Starting the Pulsar standalone cluster from scratch doesn't enable ZooKeeper by default. However, the Pulsar SQL depends on ZooKeeper. Therefore, you need to set ",(0,r.yg)("inlineCode",{parentName:"p"},"PULSAR_STANDALONE_USE_ZOOKEEPER=1")," to enable ZooKeeper.")),(0,r.yg)("h3",{id:"step-2-start-a-pulsar-sql-worker"},"Step 2: Start a Pulsar SQL worker"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/pulsar sql-worker run\n")),(0,r.yg)("h3",{id:"step-3-run-sql-cli"},"Step 3: Run SQL CLI"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/pulsar sql\n")),(0,r.yg)("h3",{id:"step-4-test-with-sql-commands"},"Step 4: Test with SQL commands"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'trino> show catalogs;\n Catalog\n---------\n pulsar\n system\n(2 rows)\n\nQuery 20180829_211752_00004_7qpwh, FINISHED, 1 node\nSplits: 19 total, 19 done (100.00%)\n0:00 [0 rows, 0B] [0 rows/s, 0B/s]\n\n\ntrino> show schemas in pulsar;\n        Schema\n-----------------------\n information_schema\n public/default\n public/functions\n(3 rows)\n\nQuery 20180829_211818_00005_7qpwh, FINISHED, 1 node\nSplits: 19 total, 19 done (100.00%)\n0:00 [4 rows, 89B] [21 rows/s, 471B/s]\n\n\ntrino> show tables in pulsar."public/default";\n Table\n-------\n(0 rows)\n\nQuery 20180829_211839_00006_7qpwh, FINISHED, 1 node\nSplits: 19 total, 19 done (100.00%)\n0:00 [0 rows, 0B] [0 rows/s, 0B/s]\n')),(0,r.yg)("p",null,"Since there is no data in Pulsar, no records are returned."),(0,r.yg)("h3",{id:"step-5-ingest-some-mock-data"},"Step 5: Ingest some mock data"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./bin/pulsar-admin sources create --name generator --destinationTopicName generator_test --source-type data-generator\n")),(0,r.yg)("p",null,'And then you can query a topic in the namespace "public/default":'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'trino> show tables in pulsar."public/default";\n     Table\n----------------\n generator_test\n(1 row)\n\nQuery 20180829_213202_00000_csyeu, FINISHED, 1 node\nSplits: 19 total, 19 done (100.00%)\n0:02 [1 rows, 38B] [0 rows/s, 17B/s]\n')),(0,r.yg)("p",null,'You can now query the data within the topic "generator_test":'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'trino> select * from pulsar."public/default".generator_test;\n\n  firstname  | middlename  |  lastname   |              email               |   username   | password | telephonenumber | age |                 companyemail                  | nationalidentitycardnumber |\n-------------+-------------+-------------+----------------------------------+--------------+----------+-----------------+-----+-----------------------------------------------+----------------------------+\n Genesis     | Katherine   | Wiley       | genesis.wiley@gmail.com          | genesisw     | y9D2dtU3 | 959-197-1860    |  71 | genesis.wiley@interdemconsulting.eu           | 880-58-9247                |\n Brayden     |             | Stanton     | brayden.stanton@yahoo.com        | braydens     | ZnjmhXik | 220-027-867     |  81 | brayden.stanton@supermemo.eu                  | 604-60-7069                |\n Benjamin    | Julian      | Velasquez   | benjamin.velasquez@yahoo.com     | benjaminv    | 8Bc7m3eb | 298-377-0062    |  21 | benjamin.velasquez@hostesltd.biz              | 213-32-5882                |\n Michael     | Thomas      | Donovan     | donovan@mail.com                 | michaeld     | OqBm9MLs | 078-134-4685    |  55 | michael.donovan@memortech.eu                  | 443-30-3442                |\n Brooklyn    | Avery       | Roach       | brooklynroach@yahoo.com          | broach       | IxtBLafO | 387-786-2998    |  68 | brooklyn.roach@warst.biz                      | 085-88-3973                |\n Skylar      |             | Bradshaw    | skylarbradshaw@yahoo.com         | skylarb      | p6eC6cKy | 210-872-608     |  96 | skylar.bradshaw@flyhigh.eu                    | 453-46-0334                |\n...\n')),(0,r.yg)("p",null,"You can query the mock data."))}d.isMDXComponent=!0}}]);