"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[34105],{15680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>d});var n=t(96540);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function l(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?l(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=n.createContext({}),p=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(u.Provider,{value:r},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},y=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),s=p(t),y=o,d=s["".concat(u,".").concat(y)]||s[y]||m[y]||l;return t?n.createElement(d,i(i({ref:r},c),{},{components:t})):n.createElement(d,i({ref:r},c))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var l=t.length,i=new Array(l);i[0]=y;var a={};for(var u in r)hasOwnProperty.call(r,u)&&(a[u]=r[u]);a.originalType=e,a[s]="string"==typeof e?e:o,i[1]=a;for(var p=2;p<l;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}y.displayName="MDXCreateElement"},94137:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>p});var n=t(58168),o=(t(96540),t(15680));const l={id:"reference-metrics-opentelemetry",title:"Pulsar OpenTelemetry Metrics",sidebar_label:"OpenTelemetry Metrics"},i=void 0,a={unversionedId:"reference-metrics-opentelemetry",id:"reference-metrics-opentelemetry",title:"Pulsar OpenTelemetry Metrics",description:"Pulsar exposes the following OpenTelemetry metrics.",source:"@site/docs/reference-metrics-opentelemetry.md",sourceDirName:".",slug:"/reference-metrics-opentelemetry",permalink:"/docs/next/reference-metrics-opentelemetry",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/docs/reference-metrics-opentelemetry.md",tags:[],version:"current",frontMatter:{id:"reference-metrics-opentelemetry",title:"Pulsar OpenTelemetry Metrics",sidebar_label:"OpenTelemetry Metrics"},sidebar:"docsSidebar",previous:{title:"Monitoring",permalink:"/docs/next/deploy-monitoring"},next:{title:"Overview",permalink:"/docs/next/security-overview"}},u={},p=[{value:"Broker",id:"broker",level:2},{value:"Topic Lookup metrics",id:"topic-lookup-metrics",level:3},{value:"pulsar.broker.lookup.request.duration",id:"pulsarbrokerlookuprequestduration",level:4},{value:"pulsar.broker.request.topic.lookup.concurrent.usage",id:"pulsarbrokerrequesttopiclookupconcurrentusage",level:4},{value:"pulsar.broker.request.topic.lookup.concurrent.limit",id:"pulsarbrokerrequesttopiclookupconcurrentlimit",level:4},{value:"pulsar.broker.topic.load.concurrent.usage",id:"pulsarbrokertopicloadconcurrentusage",level:4},{value:"pulsar.broker.topic.load.concurrent.limit",id:"pulsarbrokertopicloadconcurrentlimit",level:4}],c={toc:p},s="wrapper";function m(e){let{components:r,...t}=e;return(0,o.yg)(s,(0,n.A)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Pulsar exposes the following OpenTelemetry metrics."),(0,o.yg)("h2",{id:"broker"},"Broker"),(0,o.yg)("h3",{id:"topic-lookup-metrics"},"Topic Lookup metrics"),(0,o.yg)("h4",{id:"pulsarbrokerlookuprequestduration"},"pulsar.broker.lookup.request.duration"),(0,o.yg)("p",null,"The duration of topic lookup requests (either binary or HTTP)"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Type: Histogram"),(0,o.yg)("li",{parentName:"ul"},"Unit: ",(0,o.yg)("inlineCode",{parentName:"li"},"second")),(0,o.yg)("li",{parentName:"ul"},"Attributes:",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"pulsar.lookup.response")," - The response type of the lookup request",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"failure")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"broker")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"redirect"))))))),(0,o.yg)("h4",{id:"pulsarbrokerrequesttopiclookupconcurrentusage"},"pulsar.broker.request.topic.lookup.concurrent.usage"),(0,o.yg)("p",null,'The number of pending lookup operations in the broker. When it reaches threshold "maxConcurrentLookupRequest" defined in broker.conf, new requests are rejected.'),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Type: UpDownCounter"),(0,o.yg)("li",{parentName:"ul"},"Unit: ",(0,o.yg)("inlineCode",{parentName:"li"},"{operation}"))),(0,o.yg)("h4",{id:"pulsarbrokerrequesttopiclookupconcurrentlimit"},"pulsar.broker.request.topic.lookup.concurrent.limit"),(0,o.yg)("p",null,'The maximum number of pending lookup operations in the broker. Equal to "maxConcurrentLookupRequest" defined in broker.conf.'),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Type: UpDownCounter"),(0,o.yg)("li",{parentName:"ul"},"Unit: ",(0,o.yg)("inlineCode",{parentName:"li"},"{operation}"))),(0,o.yg)("h4",{id:"pulsarbrokertopicloadconcurrentusage"},"pulsar.broker.topic.load.concurrent.usage"),(0,o.yg)("p",null,'The number of pending topic load operations in the broker. When it reaches threshold "maxConcurrentTopicLoadRequest" defined in broker.conf, new requests are rejected.'),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Type: UpDownCounter"),(0,o.yg)("li",{parentName:"ul"},"Unit: ",(0,o.yg)("inlineCode",{parentName:"li"},"{operation}"))),(0,o.yg)("h4",{id:"pulsarbrokertopicloadconcurrentlimit"},"pulsar.broker.topic.load.concurrent.limit"),(0,o.yg)("p",null,'The maximum number of pending topic load operations in the broker. Equal to "maxConcurrentTopicLoadRequest" defined in broker.conf.'),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Type: UpDownCounter"),(0,o.yg)("li",{parentName:"ul"},"Unit: ",(0,o.yg)("inlineCode",{parentName:"li"},"{operation}"))))}m.isMDXComponent=!0}}]);